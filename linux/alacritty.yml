env:
  TERM: xterm-256color
shell:
  program: /bin/zsh
  args:
    - -l
    - -c
    - -u
    - "tmux"

cursor:
  style:
    shape: Beam

window:
  padding:
    x: 4
    y: 4
  dynamic_padding: true
  opacity: 0.90

# Good themes
# ShadesOfPurple, panda
font:
  size: 12
  offset:
    x: 0
    y: 0
  normal:
    # family: "SauceCodePro NFM"
    # family: "FiraCode Nerd Font"
    family: "JetBrains Mono NF"
    # family: "Anonymice NFM"
    # family: "Roboto Mono NFM"
    # family: "OpenDyslexic NFM"
    # family: "FantasqueSansMono NFM"
    # family: "LiterationMono NFM"
    # family: "Hack NFM"
    # family: "SpaceMono NFM"
    # family: "FiraCode NFM"
    # family: "GoMono NFM"
    # family: "Ubuntu Mono"
    style: Regular

  bold:
    # family: "FiraCode Nerd Font"
    # family: "SauceCodePro NFM"
    family: "JetBrains Mono NF"
    # family: "FantasqueSansMono NFM"
    # family: "SpaceMono NFM"
    # family: "Anonymice NFM"
    # family: "Roboto Mono NFM"
    style: Bold

  italic:
    # family: "FiraCode Nerd Font"
    # family: "SauceCodePro NFM"
    family: "JetBrains Mono NF"
    # family: "SpaceMono NFM"
    # family: "Anonymice NFM"
    # family: "Roboto Mono NFM"
    # family: "FantasqueSansMono NFM"
    # family: "JetBrains Mono"
    style: Italic

scrolling:
  history: 10000
  multiplier: 5

key_bindings:
  # - { key: V, mods: Control, action: Paste }
  - { key: H, mods: Control, chars: "\x1b[D" }
  - { key: J, mods: Control, chars: "\x1b[B" }
  - { key: K, mods: Control, chars: "\x1b[A" }
  - { key: L, mods: Control, chars: "\x1b[C" }

  # - { key: H, mods: Control, chars: "\e[D", mode: ~AppCursor }
  # - { key: L, mods: Control, chars: "\eOC", mode: ~AppCursor }
  # - { key: J, mods: Control, chars: "\e[B", mode: ~AppCursor }
  # - { key: K, mods: Control, chars: "\e[A", mode: ~AppCursor }
  # Key bindings
  #
  # Key bindings are specified as a list of objects. For example, this is the
  # default paste binding:
  #
  # `- { key: V, mods: Control|Shift, action: Paste }`
  #
  # Each key binding will specify a:
  #
  # - `key`: Identifier of the key pressed
  #
  #    - A-Z
  #    - F1-F24
  #    - Key0-Key9
  #
  #    A full list with available key codes can be found here:
  #    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
  #
  #    Instead of using the name of the keys, the `key` field also supports using
  #    the scancode of the desired key. Scancodes have to be specified as a
  #    decimal number. This command will allow you to display the hex scancodes
  #    for certain keys:
  #
  #       `showkey --scancodes`.
  #
  # Then exactly one of:
  #
  # - `chars`: Send a byte sequence to the running application
  #
  #    The `chars` field writes the specified string to the terminal. This makes
  #    it possible to pass escape sequences. To find escape codes for bindings
  #    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
  #    of tmux. Note that applications use terminfo to map escape sequences back
  #    to keys. It is therefore required to update the terminfo when changing an
  #    escape sequence.
  #
  # - `action`: Execute a predefined action
  #
  #   - ToggleViMode
  #   - SearchForward
  #       Start searching toward the right of the search origin.
  #   - SearchBackward
  #       Start searching toward the left of the search origin.
  #   - Copy
  #   - Paste
  #   - IncreaseFontSize
  #   - DecreaseFontSize
  #   - ResetFontSize
  #   - ScrollPageUp
  #   - ScrollPageDown
  #   - ScrollHalfPageUp
  #   - ScrollHalfPageDown
  #   - ScrollLineUp
  #   - ScrollLineDown
  #   - ScrollToTop
  #   - ScrollToBottom
  #   - ClearHistory
  #       Remove the terminal's scrollback history.
  #   - Hide
  #       Hide the Alacritty window.
  #   - Minimize
  #       Minimize the Alacritty window.
  #   - Quit
  #       Quit Alacritty.
  #   - ToggleFullscreen
  #   - SpawnNewInstance
  #       Spawn a new instance of Alacritty.
  #   - CreateNewWindow
  #       Create a new Alacritty window from the current process.
  #   - ClearLogNotice
  #       Clear Alacritty's UI warning and error notice.
  #   - ClearSelection
  #       Remove the active selection.
  #   - ReceiveChar
  #   - None
  #
  # - Vi mode exclusive actions:
  #
  #   - Open
  #       Perform the action of the first matching hint under the vi mode cursor
  #       with `mouse.enabled` set to `true`.
  #   - ToggleNormalSelection
  #   - ToggleLineSelection
  #   - ToggleBlockSelection
  #   - ToggleSemanticSelection
  #       Toggle semantic selection based on `selection.semantic_escape_chars`.
  #
  # - Vi mode exclusive cursor motion actions:
  #
  #   - Up
  #       One line up.
  #   - Down
  #       One line down.
  #   - Left
  #       One character left.
  #   - Right
  #       One character right.
  #   - First
  #       First column, or beginning of the line when already at the first column.
  #   - Last
  #       Last column, or beginning of the line when already at the last column.
  #   - FirstOccupied
  #       First non-empty cell in this terminal row, or first non-empty cell of
  #       the line when already at the first cell of the row.
  #   - High
  #       Top of the screen.
  #   - Middle
  #       Center of the screen.
  #   - Low
  #       Bottom of the screen.
  #   - SemanticLeft
  #       Start of the previous semantically separated word.
  #   - SemanticRight
  #       Start of the next semantically separated word.
  #   - SemanticLeftEnd
  #       End of the previous semantically separated word.
  #   - SemanticRightEnd
  #       End of the next semantically separated word.
  #   - WordLeft
  #       Start of the previous whitespace separated word.
  #   - WordRight
  #       Start of the next whitespace separated word.
  #   - WordLeftEnd
  #       End of the previous whitespace separated word.
  #   - WordRightEnd
  #       End of the next whitespace separated word.
  #   - Bracket
  #       Character matching the bracket at the cursor's location.
  #   - SearchNext
  #       Beginning of the next match.
  #   - SearchPrevious
  #       Beginning of the previous match.
  #   - SearchStart
  #       Start of the match to the left of the vi mode cursor.
  #   - SearchEnd
  #       End of the match to the right of the vi mode cursor.
  #
  # - Search mode exclusive actions:
  #   - SearchFocusNext
  #       Move the focus to the next search match.
  #   - SearchFocusPrevious
  #       Move the focus to the previous search match.
  #   - SearchConfirm
  #   - SearchCancel
  #   - SearchClear
  #       Reset the search regex.
  #   - SearchDeleteWord
  #       Delete the last word in the search regex.
  #   - SearchHistoryPrevious
  #       Go to the previous regex in the search history.
  #   - SearchHistoryNext
  #       Go to the next regex in the search history.
  #
  # - macOS exclusive actions:
  #   - ToggleSimpleFullscreen
  #       Enter fullscreen without occupying another space.
  #
  # - Linux/BSD exclusive actions:
  #
  #   - CopySelection
  #       Copy from the selection buffer.
  #   - PasteSelection
  #       Paste from the selection buffer.
  #
  # - `command`: Fork and execute a specified command plus arguments
  #
  #    The `command` field must be a map containing a `program` string and an
  #    `args` array of command line parameter strings. For example:
  #       `{ program: "alacritty", args: ["-e", "vttest"] }`
  #
  # And optionally:
  #
  # - `mods`: Key modifiers to filter binding actions
  #
  #    - Command
  #    - Control
  #    - Option
  #    - Super
  #    - Shift
  #    - Alt
  #
  #    Multiple `mods` can be combined using `|` like this:
  #       `mods: Control|Shift`.
  #    Whitespace and capitalization are relevant and must match the example.
  #
  # - `mode`: Indicate a binding for only specific terminal reported modes
  #
  #    This is mainly used to send applications the correct escape sequences
  #    when in different modes.
  #
  #    - AppCursor
  #    - AppKeypad
  #    - Search
  #    - Alt
  #    - Vi
  #
  #    A `~` operator can be used before a mode to apply the binding whenever
  #    the mode is *not* active, e.g. `~Alt`.
  #
  # Bindings are always filled by default, but will be replaced when a new
  # binding with the same triggers is defined. To unset a default binding, it can
  # be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
  # a no-op if you do not wish to receive input characters for that binding.
  #
  # If the same trigger is assigned to multiple actions, all of them are executed
  # in the order they were defined in.
  #key_bindings:
  #- { key: Paste,                                       action: Paste          }
  #- { key: Copy,                                        action: Copy           }
  #- { key: L,         mods: Control,                    action: ClearLogNotice }
  #- { key: L,         mods: Control, mode: ~Vi|~Search, chars: "\x0c"          }
  #- { key: PageUp,    mods: Shift,   mode: ~Alt,        action: ScrollPageUp   }
  #- { key: PageDown,  mods: Shift,   mode: ~Alt,        action: ScrollPageDown }
  #- { key: Home,      mods: Shift,   mode: ~Alt,        action: ScrollToTop    }
  #- { key: End,       mods: Shift,   mode: ~Alt,        action: ScrollToBottom }
  # Vi Mode
  #- { key: Space,  mods: Shift|Control, mode: ~Search,    action: ToggleViMode            }
  #- { key: Space,  mods: Shift|Control, mode: Vi|~Search, action: ScrollToBottom          }
  #- { key: Escape,                      mode: Vi|~Search, action: ClearSelection          }
  #- { key: I,                           mode: Vi|~Search, action: ToggleViMode            }
  #- { key: I,                           mode: Vi|~Search, action: ScrollToBottom          }
  #- { key: C,      mods: Control,       mode: Vi|~Search, action: ToggleViMode            }
  #- { key: Y,      mods: Control,       mode: Vi|~Search, action: ScrollLineUp            }
  #- { key: E,      mods: Control,       mode: Vi|~Search, action: ScrollLineDown          }
  #- { key: G,                           mode: Vi|~Search, action: ScrollToTop             }
  #- { key: G,      mods: Shift,         mode: Vi|~Search, action: ScrollToBottom          }
  #- { key: B,      mods: Control,       mode: Vi|~Search, action: ScrollPageUp            }
  #- { key: F,      mods: Control,       mode: Vi|~Search, action: ScrollPageDown          }
  #- { key: U,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageUp        }
  #- { key: D,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageDown      }
  #- { key: Y,                           mode: Vi|~Search, action: Copy                    }
  #- { key: Y,                           mode: Vi|~Search, action: ClearSelection          }
  #- { key: Copy,                        mode: Vi|~Search, action: ClearSelection          }
  #- { key: V,                           mode: Vi|~Search, action: ToggleNormalSelection   }
  #- { key: V,      mods: Shift,         mode: Vi|~Search, action: ToggleLineSelection     }
  #- { key: V,      mods: Control,       mode: Vi|~Search, action: ToggleBlockSelection    }
  #- { key: V,      mods: Alt,           mode: Vi|~Search, action: ToggleSemanticSelection }
  #- { key: Return,                      mode: Vi|~Search, action: Open                    }
  #- { key: K,                           mode: Vi|~Search, action: Up                      }
  #- { key: J,                           mode: Vi|~Search, action: Down                    }
  #- { key: H,                           mode: Vi|~Search, action: Left                    }
  #- { key: L,                           mode: Vi|~Search, action: Right                   }
  #- { key: Up,                          mode: Vi|~Search, action: Up                      }
  #- { key: Down,                        mode: Vi|~Search, action: Down                    }
  #- { key: Left,                        mode: Vi|~Search, action: Left                    }
  #- { key: Right,                       mode: Vi|~Search, action: Right                   }
  #- { key: Key0,                        mode: Vi|~Search, action: First                   }
  #- { key: Key4,   mods: Shift,         mode: Vi|~Search, action: Last                    }
  #- { key: Key6,   mods: Shift,         mode: Vi|~Search, action: FirstOccupied           }
  #- { key: H,      mods: Shift,         mode: Vi|~Search, action: High                    }
  #- { key: M,      mods: Shift,         mode: Vi|~Search, action: Middle                  }
  #- { key: L,      mods: Shift,         mode: Vi|~Search, action: Low                     }
  #- { key: B,                           mode: Vi|~Search, action: SemanticLeft            }
  #- { key: W,                           mode: Vi|~Search, action: SemanticRight           }
  #- { key: E,                           mode: Vi|~Search, action: SemanticRightEnd        }
  #- { key: B,      mods: Shift,         mode: Vi|~Search, action: WordLeft                }
  #- { key: W,      mods: Shift,         mode: Vi|~Search, action: WordRight               }
  #- { key: E,      mods: Shift,         mode: Vi|~Search, action: WordRightEnd            }
  #- { key: Key5,   mods: Shift,         mode: Vi|~Search, action: Bracket                 }
  #- { key: Slash,                       mode: Vi|~Search, action: SearchForward           }
  #- { key: Slash,  mods: Shift,         mode: Vi|~Search, action: SearchBackward          }
  #- { key: N,                           mode: Vi|~Search, action: SearchNext              }
  #- { key: N,      mods: Shift,         mode: Vi|~Search, action: SearchPrevious          }
  # Search Mode
  #- { key: Return,                mode: Search|Vi,  action: SearchConfirm         }
  #- { key: Escape,                mode: Search,     action: SearchCancel          }
  #- { key: C,      mods: Control, mode: Search,     action: SearchCancel          }
  #- { key: U,      mods: Control, mode: Search,     action: SearchClear           }
  #- { key: W,      mods: Control, mode: Search,     action: SearchDeleteWord      }
  #- { key: P,      mods: Control, mode: Search,     action: SearchHistoryPrevious }
  #- { key: N,      mods: Control, mode: Search,     action: SearchHistoryNext     }
  #- { key: Up,                    mode: Search,     action: SearchHistoryPrevious }
  #- { key: Down,                  mode: Search,     action: SearchHistoryNext     }
  #- { key: Return,                mode: Search|~Vi, action: SearchFocusNext       }
  #- { key: Return, mods: Shift,   mode: Search|~Vi, action: SearchFocusPrevious   }
  # (Windows, Linux, and BSD only)
  #- { key: V,              mods: Control|Shift, mode: ~Vi,        action: Paste            }
  #- { key: C,              mods: Control|Shift,                   action: Copy             }
  #- { key: F,              mods: Control|Shift, mode: ~Search,    action: SearchForward    }
  #- { key: B,              mods: Control|Shift, mode: ~Search,    action: SearchBackward   }
  #- { key: C,              mods: Control|Shift, mode: Vi|~Search, action: ClearSelection   }
  #- { key: Insert,         mods: Shift,                           action: PasteSelection   }
  #- { key: Key0,           mods: Control,                         action: ResetFontSize    }
  #- { key: Equals,         mods: Control,                         action: IncreaseFontSize }
  #- { key: Plus,           mods: Control,                         action: IncreaseFontSize }
  #- { key: NumpadAdd,      mods: Control,                         action: IncreaseFontSize }
  #- { key: Minus,          mods: Control,                         action: DecreaseFontSize }
  #- { key: NumpadSubtract, mods: Control,                         action: DecreaseFontSize }
  # (Windows only)
  #- { key: Return,   mods: Alt,           action: ToggleFullscreen }
  # (macOS only)
  #- { key: K,              mods: Command, mode: ~Vi|~Search, chars: "\x0c"                 }
  #- { key: K,              mods: Command, mode: ~Vi|~Search, action: ClearHistory          }
  #- { key: Key0,           mods: Command,                    action: ResetFontSize         }
  #- { key: Equals,         mods: Command,                    action: IncreaseFontSize      }
  #- { key: Plus,           mods: Command,                    action: IncreaseFontSize      }
  #- { key: NumpadAdd,      mods: Command,                    action: IncreaseFontSize      }
  #- { key: Minus,          mods: Command,                    action: DecreaseFontSize      }
  #- { key: NumpadSubtract, mods: Command,                    action: DecreaseFontSize      }
  #- { key: V,              mods: Command,                    action: Paste                 }
  #- { key: C,              mods: Command,                    action: Copy                  }
  #- { key: C,              mods: Command, mode: Vi|~Search,  action: ClearSelection        }
  #- { key: H,              mods: Command,                    action: Hide                  }
  #- { key: H,              mods: Command|Alt,                action: HideOtherApplications }
  #- { key: M,              mods: Command,                    action: Minimize              }
  #- { key: Q,              mods: Command,                    action: Quit                  }
  #- { key: W,              mods: Command,                    action: Quit                  }
  #- { key: N,              mods: Command,                    action: SpawnNewInstance      }
  #- { key: F,              mods: Command|Control,            action: ToggleFullscreen      }
  #- { key: F,              mods: Command, mode: ~Search,     action: SearchForward         }
  #- { key: B,              mods: Command, mode: ~Search,     action: SearchBackward        }
  #debug:
  # Display the time it takes to redraw each frame.
  #render_timer: false
  # Keep the log file after quitting Alacritty.
  #persistent_logging: false
  # Log level
  #
  # Values for `log_level`:
  #   - Off
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn
  # Print all received window events.
  #print_events: false
  # Highlight window damage information.
  #highlight_damage: false
  # colors:
#   primary:
#     background: "0x2c2e34"
#     foreground: "0xe2e2e3"
#
#   normal:
#     black: "0x181819"
#     red: "0xfc5d7c"
#     green: "0x9ed072"
#     yellow: "0xe7c664"
#     blue: "0x76cce0"
#     magenta: "0xb39df3"
#     cyan: "0xf39660"
#     white: "0xe2e2e3"
#
#   bright:
#     black: "0x7f8490"
#     red: "0xfc5d7c"
#     green: "0x9ed072"
#     yellow: "0xe7c664"
#     blue: "0x76cce0"
#     magenta: "0xb39df3"
#     cyan: "0xf39660"
#     white: "0xe2e2e3"
# theme: sonokai
#
import:
  - ~/.config/alacritty/catppuccin/catppuccin-macchiato.yml
  # - ~/.config/alacritty/catppuccin/catppuccin-latte.yml
  # - ~/.config/alacritty/catppuccin/catppuccin-frappe.yml
  # - ~/.config/alacritty/catppuccin/catppuccin-mocha.yml
# andromeda

# colors:
#   primary:
#     background: "0x2b2d3a"
#     foreground: "0xe1e3e4"
#   normal:
#     black: "0x181a1c"
#     red: "0xfb617e"
#     green: "0x9ed06c"
#     yellow: "0xedc763"
#     blue: "0x6dcae8"
#     magenta: "0xbb97ee"
#     cyan: "0xf89860"
#     white: "0xe1e3e4"
#   bright:
#     black: "0x7e8294"
#     red: "0xfb617e"
#     green: "0x9ed06c"
#     yellow: "0xedc763"
#     blue: "0x6dcae8"
#     magenta: "0xbb97ee"
#     cyan: "0xf89860"
#     white: "0xe1e3e4"

# atlantis
#
# colors:
#   primary:
#     background: "0x2a2f38"
#     foreground: "0xe1e3e4"
#
#   normal:
#     black: "0x181a1c"
#     red: "0xff6578"
#     green: "0x9dd274"
#     yellow: "0xeacb64"
#     blue: "0x72cce8"
#     magenta: "0xba9cf3"
#     cyan: "0xf69c5e"
#     white: "0xe1e3e4"
#
#   bright:
#     black: "0x828a9a"
#     red: "0xff6578"
#     green: "0x9dd274"
#     yellow: "0xeacb64"
#     blue: "0x72cce8"
#     magenta: "0xba9cf3"
#     cyan: "0xf69c5e"
#     white: "0xe1e3e4"
#
# maia
#
# colors:
#   primary:
#     background: "0x273136"
#     foreground: "0xe1e2e3"
#
#   normal:
#     black: "0x1c1e1f"
#     red: "0xf76c7c"
#     green: "0x9cd57b"
#     yellow: "0xe3d367"
#     blue: "0x78cee9"
#     magenta: "0xbaa0f8"
#     cyan: "0xf3a96a"
#     white: "0xe1e2e3"
#
#   bright:
#     black: "0x82878b"
#     red: "0xf76c7c"
#     green: "0x9cd57b"
#     yellow: "0xe3d367"
#     blue: "0x78cee9"
#     magenta: "0xbaa0f8"
#     cyan: "0xf3a96a"
#     white: "0xe1e2e3"
#
# espresso
#
# colors:
#   primary:
#     background: "0x312c2b"
#     foreground: "0xe4e3e1"
#
#   normal:
#     black: "0x1f1e1c"
#     red: "0xf86882"
#     green: "0xa6cd77"
#     yellow: "0xf0c66f"
#     blue: "0x81d0c9"
#     magenta: "0x9fa0e1"
#     cyan: "0xf08d71"
#     white: "0xe4e3e1"
#
#   bright:
#     black: "0x90817b"
#     red: "0xf86882"
#     green: "0xa6cd77"
#     yellow: "0xf0c66f"
#     blue: "0x81d0c9"
#     magenta: "0x9fa0e1"
#     cyan: "0xf08d71"
#     white: "0xe4e3e1"

